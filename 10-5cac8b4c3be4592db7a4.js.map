{"version":3,"sources":["webpack:///../packages/avatar/Avatar.js","webpack:///../packages/avatar/index.js"],"names":["Loader","skeletonProps","rest","height","Avatar","fallback","props","useState","avatar","setAvatar","loading","setLoading","useEffectAsync","a","avSettingsApi","resp","avi","get","data-testid","src","alt","loader"],"mappings":"kvBAaA,IAAMA,EAAS,SAAC,GAAD,IAAGC,EAAH,gBAAqBC,EAArB,8BACb,2BACE,sBAFW,KAUfF,eAAsB,CACpBC,cAAe,CACbE,OAAQ,SAIZ,IAAMC,EAAS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUJ,EAA8B,EAA9BA,cAAkBK,EAAY,oCAC5BC,mBAD4B,GACjDC,EADiD,KACzCC,EADyC,OAE1BF,oBAF0B,GAEjDG,EAFiD,KAExCC,EAFwC,KAcxD,OAVAC,YAAc,YAAC,8BAAAC,EAAA,6DACbF,MADa,SAEMG,mBAFN,iBAEPC,EAFO,OAIPC,EAAMC,IAAIF,EAAK,0BAJR,GAMbN,KACAE,MAPa,2CAAfC,IAUA,EAEI,mCACEM,cADF,oBAEEjB,cAAeA,GAHnB,IAUA,qCACEiB,cADF,aAEEC,IAFF,EAGEC,IAHF,SAIEC,OACE,mCACEH,cADF,aAEEjB,cAAeA,GAFjB,KANN,KAsBFG,eAAsB,CACpBC,SAAU,iDAGZ,QC7EA","file":"10-5cac8b4c3be4592db7a4.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport Img from 'react-image';\nimport { useEffectAsync } from '@availity/hooks';\nimport { avSettingsApi } from '@availity/api-axios';\nimport get from 'lodash.get';\n\nconst skeletonPropType = PropTypes.shape({\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n});\n\nconst Loader = ({ skeletonProps, ...rest }) => (\n  <span {...rest}>\n    <Skeleton {...skeletonProps} />\n  </span>\n);\n\nLoader.propTypes = {\n  skeletonProps: skeletonPropType,\n};\n\nLoader.defaultProps = {\n  skeletonProps: {\n    height: '100%',\n  },\n};\n\nconst Avatar = ({ fallback, skeletonProps, ...props }) => {\n  const [avatar, setAvatar] = useState(fallback);\n  const [loading, setLoading] = useState(true);\n\n  useEffectAsync(async () => {\n    setLoading(true);\n    const resp = await avSettingsApi.getApplication('AVATAR');\n\n    const avi = get(resp, 'data.settings[0].avatar', fallback);\n\n    setAvatar(avi);\n    setLoading(false);\n  }, []);\n\n  if (loading) {\n    return (\n      <Loader\n        data-testid=\"avatar-img-loader\"\n        skeletonProps={skeletonProps}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <Img\n      data-testid=\"avatar-img\"\n      src={avatar}\n      alt=\"Avatar\"\n      loader={\n        <Loader\n          data-testid=\"avatar-img\"\n          skeletonProps={skeletonProps}\n          {...props}\n        />\n      }\n      {...props}\n    />\n  );\n};\n\nAvatar.propTypes = {\n  fallback: PropTypes.string,\n  skeletonProps: skeletonPropType,\n};\n\nAvatar.defaultProps = {\n  fallback: '/public/apps/my-profile/images/Avatars-00.png',\n};\n\nexport default Avatar;\n","import Avatar from './Avatar';\n\nexport default Avatar;\n"],"sourceRoot":""}